include Makefile_sources

#CC=g++-4.4
CC=g++

SYNTH=
SYNTH+= -DENABLE_SYNTH_PICOSYNTH
SYNTH+= -DENABLE_SYNTH_PICODRUM
SYNTH+= -DENABLE_SYNTH_OPL2
SYNTH+= -DENABLE_SYNTH_PBSYNTH
SYNTH+= -DENABLE_SYNTH_LGPTSAMPLER
SYNTH+= -DENABLE_SYNTH_CURSYNTH
SYNTH+= -DENABLE_SYNTH_OPEN303
SYNTH+= -DENABLE_SYNTH_TWYTCHSYNTH
SYNTH+= -DENABLE_SYNTH_MDADRUM
SYNTH+= -DENABLE_SYNTH_SIDSYNTH
SYNTH+= -DENABLE_SYNTH_MIDIOUT


CFLAGS_SDLVERS=-D__SDL20__
CFLAGS=
CFLAGS+= -c -std=c++11 -O3
CFLAGS+= -I. -LSDL/lib
#CFLAGS+= -ggdb
#CFLAGS+= -pg
CFLAGS+= ${CFLAGS_SDLVERS}
CFLAGS+= -fpermissive
CFLAGS+= ${SYNTH}

CFLAGS+= -D__LINUX__  
CFLAGS+= -DLINUX
CFLAGS+= -DDUMP_AUDIO=0
CFLAGS+= -D__LINUX_PULSE__
CFLAGS+= -D__RTAUDIO__
CFLAGS+= -D__RTMIDI__
CFLAGS+= -DPC_DESKTOP
CFLAGS+= -DDEBUGPRINTF
CFLAGS+= -DSCREEN_MULT=2
CFLAGS+= -D__VECTORFPU__


LDGLAGS=
LDFLAGS+=-lSDL2
LDFLAGS+=-lSDL2_ttf
LDFLAGS+=-lpthread
LDFLAGS+=-lpulse
LDFLAGS+=-lpulse-simple
LDFLAGS+=-ljack

OBJTOLINK=RtAudio.o
OBJTOLINK=RtAudio.o RtMidi.o
OBJTOLINK=


SOURCES=	\
			RtAudio.cpp		\
		      	RtMidi.cpp		\
			AudioDriverRTAudio.cpp   \
			SYSTEMLINUX.cpp	       \
			SysMutex.cpp	       \
			MidiOutSystem.cpp	       \
			MidiInSystem.cpp	       \
			$(SOURCES_PICOLOOP)     \
			$(SOURCES_PICOSYNTH) \
			$(SOURCES_PICOSYNTHUI) \
			$(SOURCES_PICODRUM) \
			$(SOURCES_PICODRUMUI) \
			$(SOURCES_DBOPL) \
			$(SOURCES_DBOPLUI) \
			$(SOURCES_PBSYNTH) \
			$(SOURCES_PBSYNTHUI) \
			$(SOURCES_CURSYNTH) \
			$(SOURCES_CURSYNTHUI) \
			$(SOURCES_OPEN303) \
			$(SOURCES_OPEN303UI) \
			$(SOURCES_TWYTCH) \
			$(SOURCES_TWYTCHUI) \
			$(SOURCES_MIDIOUT) \
			$(SOURCES_MIDIOUTUI) \
			$(SOURCES_MDADRUM) \
			$(SOURCES_MDADRUMUI) \
			$(SOURCES_SIDSYNTH) \
			$(SOURCES_SIDSYNTHUI) \
			$(SOURCES_LGPTSAMPLERSYNTH) \
			$(SOURCES_LGPTSAMPLERSYNTHUI) 


BLA=\






OBJDIR             =     debian_RtAudio_sdl20
OBJECTS            =   $(SOURCES:.cpp=.o)
DEPENDENCY         =   $(SOURCES:.cpp=.d)

DEPENDENCYINOBJDIR = $(addprefix $(OBJDIR)/,$(DEPENDENCY))
OBJECTSINOBJDIR    = $(addprefix $(OBJDIR)/,$(OBJECTS))
OBJTOLINKINOBJDIR  = $(addprefix $(OBJDIR)/,$(OBJTOLINK))

EXECUTABLE=PatternPlayer_${OBJDIR}

#all: DIRTOCREATE $(DEPENDENCY) $(SOURCES) $(EXECUTABLE)

all: $(DEPENDENCYINOBJDIR) $(SOURCES) $(EXECUTABLE) 

$(EXECUTABLE): $(DEPENDENCYINOBJDIR) $(OBJECTSINOBJDIR)
	$(CC) $(OBJTOLINKINOBJDIR)  $(OBJECTSINOBJDIR) -o $@ $(LDFLAGS)

# the .d file contain the dependency
$(OBJDIR)/%.d : %.cpp %.h
	@[ -d `dirname $@` ] || mkdir -p `dirname $@`
	$(CC) $(CFLAGS_SDLVERS) -std=c++11 -I. -MM $< -o $@

$(OBJDIR)/%.o : %.cpp 
	@[ -d `dirname $@` ] || mkdir -p `dirname $@`
	$(CC) $(CFLAGS) $< -o $@


# include all the dependency .d file into the makefile 
# it allow to match change in .h file
-include $(DEPENDENCYINOBJDIR)


# SYSTEMLINUX.d does have a .h which is SYSTEM.h, so it need a tweaks
$(OBJDIR)/SYSTEMLINUX.d:SYSTEMLINUX.cpp 
	@[ -d `dirname $@` ] || mkdir -p `dirname $@`
	$(CC) $(CFLAGS_SDLVERS) -std=c++11 -I. -MM $< -o $@ 

# PatternPlayer.d does have a .h which is system.h
PatternPlayer.d:PatternPlayer.cpp
	@[ -d `dirname $@` ] || mkdir -p `dirname $@`
	$(CC) $(CFLAGS_SDLVERS) -std=c++11 -I. -MM $< -o $@ 


clean:
	-rm -f $(OBJECTSINOBJDIR)
	-rm -f $(DEPENDENCYINOBJDIR)
	-rm -f $(EXECUTABLE)
	-rm -f $(DEPENDENCY)



