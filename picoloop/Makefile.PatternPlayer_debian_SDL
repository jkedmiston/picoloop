include Makefile_sources

CC=g++
#CFLAGS=-c -DLINUX -I. -LSDL/lib -ggdb -pg
#LDFLAGS=-lSDL -lSDL_gfx -lSDL_ttf -lpthread  RtAudio.o  -pg
#LDFLAGS=-lSDL -lSDL_gfx -lSDL_ttf -lpthread  RtAudio.o 

#CFLAGS=-c -DLINUX -I. -LSDL/lib -DLINUX_DESKTOP

CFLAGS=-c -O3 -DLINUX -I. -LSDL/lib -DLINUX_DESKTOP -ggdb -ffast-math
CFLAGS=-c -O3 -DLINUX -I. -LSDL/lib -DLINUX_DESKTOP -ggdb  -pg
CFLAGS=-Wall -c -O3 -DLINUX -I. -LSDL/lib -DLINUX_DESKTOP -ggdb  
CFLAGS= -c -O3 -DLINUX -I. -LSDL/lib -D__SDL_AUDIO__  -DLINUX_DESKTOP -ggdb  -fpermissive
CFLAGS= -c -std=c++11 -O3 -DLINUX -I. -LSDL/lib -D__SDL_AUDIO__  -DLINUX_DESKTOP -ggdb  -fpermissive
CFLAGS= -c -std=c++11 -O3 -DLINUX -I. -LSDL/lib -D__SDL_AUDIO__ -D__RTMIDI__ -DPC_DESKTOP -ggdb  -fpermissive 

CFLAGS_SDLVERS=-D__SDL12__
CFLAGS= -c -std=c++11 -O3 ${CFLAGS_SDLVERS} -DLINUX -I. -LSDL/lib -D__SDL_AUDIO__  -DPC_DESKTOP -ggdb  -fpermissive 

LDFLAGS=-lasound -lSDL -lSDL_gfx -lSDL_ttf -lpthread -pg
LDFLAGS=-lasound -lSDL           -lSDL_ttf -lpthread -pg
LDFLAGS=-lasound -lSDL -lSDL_gfx -lSDL_ttf -lpthread

#OBJTOLINK=RtMidi.o

SOURCES=					\
			RtMidi.cpp		\
		      AudioDriverSDL.cpp       \
		      SYSTEMLINUX.cpp	       \
		      SysMutex.cpp	       \
		      MidiOutSystem.cpp	       \
		      MidiInSystem.cpp	       \
		      	$(SOURCES_PICOLOOP)     \
			$(SOURCES_PICOSYNTH) \
			$(SOURCES_PICODRUM) \
			$(SOURCES_DBOPL) \
			$(SOURCES_PBSYNTH) \
			$(SOURCES_CURSYNTH) \
			$(SOURCES_OPEN303) \
			$(SOURCES_TWYTCH) \
			$(SOURCES_MIDIOUT) \
			$(SOURCES_MDADRUM) \
			$(SOURCES_SIDSYNTH) \
			$(SOURCES_LGPTSAMPLERSYNTH) 




OBJDIR             =     debiansdl
OBJECTS            =   $(SOURCES:.cpp=.o)
DEPENDENCY         =   $(SOURCES:.cpp=.d)

DEPENDENCYINOBJDIR = $(addprefix $(OBJDIR)/,$(DEPENDENCY))
OBJECTSINOBJDIR    = $(addprefix $(OBJDIR)/,$(OBJECTS))
OBJTOLINKINOBJDIR  = $(addprefix $(OBJDIR)/,$(OBJTOLINK))

EXECUTABLE=PatternPlayer_debian_SDL


all: DIRTOCREATE $(DEPENDENCYINOBJDIR) $(SOURCES) $(EXECUTABLE) 

DIRTOCREATE:
	-mkdir -p $(OBJDIR)/Machine
	-mkdir -p $(OBJDIR)/Machine/Picosynth
	-mkdir -p $(OBJDIR)/Machine/Picodrum
	-mkdir -p $(OBJDIR)/Machine/Dbopl	
	-mkdir -p $(OBJDIR)/Machine/PBSynth
	-mkdir -p $(OBJDIR)/Machine/Cursynth
	-mkdir -p $(OBJDIR)/Machine/Open303
	-mkdir -p $(OBJDIR)/Machine/Twytch
	-mkdir -p $(OBJDIR)/Machine/MidiOutSystem
	-mkdir -p $(OBJDIR)/Machine/MDADrum
	-mkdir -p $(OBJDIR)/Machine/SIDSynth


$(EXECUTABLE): $(DEPENDENCYINOBJDIR) $(OBJECTSINOBJDIR)
	$(CC) $(OBJTOLINKINOBJDIR)  $(OBJECTSINOBJDIR) -o $@ $(LDFLAGS)

# the .d file contain the dependency
$(OBJDIR)/%.d : %.cpp %.h
	@[ -d `dirname $@` ] || mkdir -p `dirname $@`
	$(CC) ${CFLAGS_SDLVERS} -I. -MM $< -o $@

$(OBJDIR)/%.o : %.cpp 
	@[ -d `dirname $@` ] || mkdir -p `dirname $@`
	$(CC) $(CFLAGS) $< -o $@


# include all the dependency .d file into the makefile 
# it allow to match change in .h file
-include $(DEPENDENCYINOBJDIR)


# SYSTEMLINUX.d does have a .h which is SYSTEM.h, so it need a tweaks
$(OBJDIR)/SYSTEMLINUX.d:SYSTEMLINUX.cpp 
	@[ -d `dirname $@` ] || mkdir -p `dirname $@`
	$(CC) ${CFLAGS_SDLVERS} -I. -MM $< -o $@ 

# PatternPlayer.d does have a .h which is system.h
PatternPlayer.d:PatternPlayer.cpp
	@[ -d `dirname $@` ] || mkdir -p `dirname $@`
	$(CC) ${CFLAGS_SDLVERS} -std=c++11 -I. -MM $< -o $@ 


clean:
	-rm -f $(OBJECTSINOBJDIR)
	-rm -f $(DEPENDENCYINOBJDIR)
	-rm -f $(EXECUTABLE)
	-rm -f $(DEPENDENCY)



