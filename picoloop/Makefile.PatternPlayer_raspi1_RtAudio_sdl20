include Makefile_sources



CC=/usr/bin/arm-linux-gnueabi-g++-5 
CC=g++
CFLAGS_SDLVERS=-D__SDL20__
CFLAGS= -c -std=c++11 -O3 -D__LINUX__ -DLINUX -I. -LSDL/lib -D__RTAUDIO__ -DLINUX_RASPI1 -ggdb                   -DDEBUGPRINTF -fpermissive
CFLAGS= -c -std=c++11 -O3 -D__LINUX__ -DLINUX -I. -LSDL/lib -D__RTAUDIO__ -DLINUX_RASPI1 -ggdb -DFIXED                         -fpermissive -D__VOLCASYNC__
CFLAGS= -c -std=c++11 -O3 -D__SDL20__ -D__LINUX__ -DLINUX -I. -LSDL/lib -D__RTAUDIO__ -DLINUX_RASPI1 -ggdb -DFIXED                         -fpermissive -DDEBUGPRINTF
CFLAGS= -c -std=c++11 -O3 -D__SDL20__ -D__LINUX__ -DLINUX -I. -LSDL/lib -D__RTAUDIO__ -DLINUX_RASPI1 -ggdb -DFIXED                         -fpermissive -DDEBUGPRINTF  -D__LINUX_PULSE__
CFLAGS= -c -std=c++11 -O3 -D__SDL20__ -D__LINUX__ -DLINUX -I. -LSDL/lib -D__RTAUDIO__ -DLINUX_RASPI1 -ggdb -DFIXED                         -fpermissive                -D__LINUX_PULSE__
LDFLAGS=-Lraspian/lib/ -lasound -lSDL2 -lSDL2_ttf -lpthread -lpulse -lpulse-simple 


OBJTOLINK=RtAudio.o
OBJTOLINK=RtAudio.o RtMidi.o
OBJTOLINK=RtAudio.o
OBJTOLINK=

#		      Instrument.cpp           \
#		      Synth.cpp                \

SOURCES=	      \
			RtAudio.cpp		\
		        AudioDriverRTAudio.cpp   \
			SYSTEMLINUX.cpp	       \
			SysMutex.cpp	       \
			$(SOURCES_PICOLOOP)     \
			$(SOURCES_PICOSYNTH) \
			$(SOURCES_PICOSYNTHUI) \
			$(SOURCES_PICODRUM) \
			$(SOURCES_PICODRUMUI) \
			$(SOURCES_DBOPL) \
			$(SOURCES_DBOPLUI) \
			$(SOURCES_PBSYNTH) \
			$(SOURCES_PBSYNTHUI) \
			$(SOURCES_LGPTSAMPLERSYNTH) \
			$(SOURCES_LGPTSAMPLERSYNTHUI) 

	      





OBJDIR             =     raspi1_sdl20
OBJECTS            =   $(SOURCES:.cpp=.o)
DEPENDENCY         =   $(SOURCES:.cpp=.d)

DEPENDENCYINOBJDIR = $(addprefix $(OBJDIR)/,$(DEPENDENCY))
OBJECTSINOBJDIR    = $(addprefix $(OBJDIR)/,$(OBJECTS))
OBJTOLINKINOBJDIR  = $(addprefix $(OBJDIR)/,$(OBJTOLINK))

EXECUTABLE=PatternPlayer_${OBJDIR}

#all: DIRTOCREATE $(DEPENDENCY) $(SOURCES) $(EXECUTABLE)

all: $(DEPENDENCYINOBJDIR) $(SOURCES) $(EXECUTABLE) 

$(EXECUTABLE): $(DEPENDENCYINOBJDIR) $(OBJECTSINOBJDIR)
	$(CC) $(OBJTOLINKINOBJDIR)  $(OBJECTSINOBJDIR) -o $@ $(LDFLAGS)

# the .d file contain the dependency
$(OBJDIR)/%.d : %.cpp %.h
	@[ -d `dirname $@` ] || mkdir -p `dirname $@`
	$(CC) $(CFLAGS_SDLVERS) -I. -MM $< -o $@

$(OBJDIR)/%.o : %.cpp 
	@[ -d `dirname $@` ] || mkdir -p `dirname $@`
	$(CC) $(CFLAGS) $< -o $@


# include all the dependency .d file into the makefile 
# it allow to match change in .h file
-include $(DEPENDENCYINOBJDIR)


# SYSTEMLINUX.d does have a .h which is SYSTEM.h, so it need a tweaks
$(OBJDIR)/SYSTEMLINUX.d:SYSTEMLINUX.cpp 
	@[ -d `dirname $@` ] || mkdir -p `dirname $@`
	$(CC) $(CFLAGS_SDLVERS) -I. -MM $< -o $@

# PatternPlayer.d does have a .h which is system.h
PatternPlayer.d:PatternPlayer.cpp
	@[ -d `dirname $@` ] || mkdir -p `dirname $@`
	$(CC) $(CFLAGS_SDLVERS) -std=c++11 -I. -MM $< -o $@ 


clean:
	-rm -f $(OBJECTSINOBJDIR)
	-rm -f $(DEPENDENCYINOBJDIR)
	-rm -f $(EXECUTABLE)
	-rm -f $(DEPENDENCY)



